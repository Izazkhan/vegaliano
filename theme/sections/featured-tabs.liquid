<div class="embla_tabs relative mx-auto">
  <div class="embla_tabs__viewport overflow-hidden mx-8">
    <div class="embla_tabs__container flex space-x-1">
      <div class="embla_tabs__slide flex-shrink-0">
        <button
          id="lounge-wear-tab"
          data-tab-target="#lounge-wear-tab-content"
          class="tab-link text-[18px] text-[#888] block p-2 text-center"
        >
          Lounge Wear
        </button>
      </div>
      <div class="embla_tabs__slide flex-shrink-0">
        <button
          id="kids-pret-tab"
          data-tab-target="#kids-pret-tab-content"
          class="tab-link text-[18px] text-[#888] block p-2 text-center"
        >
          Kids Pret
        </button>
      </div>
      <div class="embla_tabs__slide flex-shrink-0">
        <button
          id="limited-ed-tab"
          data-tab-target="#limited-ed-tab-content"
          class="tab-link text-[18px] text-[#888] block p-2 text-center"
        >
          Limited Edition
        </button>
      </div>
    </div>
  </div>

  <!-- Controls positioned absolutely to the left and right -->
  <button
    class="embla_tabs__button embla_tabs__button--prev absolute left-4 top-1/2 transform -translate-y-1/2 text-[#888]"
  >
    <svg class="w-[16px] h-[16px] lg:w-[20px] lg:h-[20px]">
      <use href="#embla_tabs__button__svg--prev"></use>
    </svg>
  </button>

  <button
    class="embla_tabs__button embla_tabs__button--next absolute right-4 top-1/2 transform -translate-y-1/2 text-[#888]"
  >
    <svg class="w-[16px] h-[16px] lg:w-[20px] lg:h-[20px]">
      <use href="#embla_tabs__button__svg--next"></use>
    </svg>
  </button>
</div>

<div class="tabsContent relative">
  <div
    class="tab-content active right-0"
    id="lounge-wear-tab-content"
    role="tabpanel"
    aria-labelledby="lounge-wear-tab"
  >
    <div class="embla_tabs_content relative mx-auto px-2">
      <div class="embla_tabs_content__viewport overflow-hidden">
        <div class="embla_tabs_content__container w-full flex">
          {% for i in (1..8) %}
            {% render 'product-card', product_title: "Product Title i" %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  <div
    class="tab-content"
    id="kids-pret-tab-content"
    role="tabpanel"
    aria-labelledby="kids-pret-tab"
  >
    Kids Pret Tab
  </div>
  <div
    class="tab-content"
    id="limited-ed-tab-content"
    role="tabpanel"
    aria-labelledby="limited-ed-tab"
  >
    Limited Edition Tab
  </div>
</div>

<style>
  /* Transition styles for tab content */
  .tab-content {
    visibility: hidden;
    opacity: 0;
    transform: translateY(40px);
    transition: 0.2s ease-in-out;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    z-index: 0;
  }

  .tab-content.active {
    visibility: visible;
    opacity: 1;
    transform: none;
    position: relative;
  }

  .tab-link.active {
    font-weight: 500;
    color: #111;
  }
</style>
<script>
  (function () {
    document.addEventListener('DOMContentLoaded', () => {
      // Tabs Content Slider
      const emblaNode = document.querySelector('.embla_tabs_content');
      const viewportNode = emblaNode.querySelector('.embla_tabs_content__viewport');

      const emblaApi = EmblaCarousel(
        viewportNode,
        {
          slidesToScroll: 'auto',
          loop: true,
          align: 'start',
        },
        [EmblaCarouselAutoplay({ playOnInit: true, delay: 3000, stopOnInteraction: false })]
      );
    });
  })();

  (function () {
    document.addEventListener('DOMContentLoaded', () => {
      // Tabs Slider
      const emblaNode = document.querySelector('.embla_tabs');
      const viewportNode = emblaNode.querySelector('.embla_tabs__viewport');
      const prevBtnNode = emblaNode.querySelector('.embla_tabs__button--prev');
      const nextBtnNode = emblaNode.querySelector('.embla_tabs__button--next');

      const emblaApi = EmblaCarousel(viewportNode, { dragFree: true });
      EmblaUtils.addPrevNextBtnsClickHandlers(emblaApi, prevBtnNode, nextBtnNode);

      const tabLinks = document.querySelectorAll('.tab-link');
      const tabContents = document.querySelectorAll('.tab-content');

      let transitionTimeout;

      tabLinks.forEach((link) => {
        link.addEventListener('click', () => {
          tabLinks.forEach((otherLink) => otherLink.classList.remove('active'));
          // Add active class to the clicked link
          link.classList.add('active');
          const targetId = link.getAttribute('data-tab-target');
          const targetContent = document.querySelector(targetId);

          const currentContent = document.querySelector('.tab-content.active');
          if (currentContent && currentContent !== targetContent) {
            currentContent.classList.remove('active');
            currentContent.style.visibility = 'hidden';
          }

          targetContent.style.visibility = 'visible';
          targetContent.classList.remove('exiting');
          targetContent.classList.add('active');
        });
      });
    });
  })();
</script>

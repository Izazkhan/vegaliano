<script src="https://unpkg.com/embla-carousel-autoplay/embla-carousel-autoplay.umd.js"></script>
<div class="embla_tabs relative mx-auto">
  <div class="embla_tabs__viewport overflow-hidden mx-8">
    <div class="embla_tabs__container flex space-x-1">
      <div class="embla_tabs__slide flex-shrink-0">
        <button
          id="lounge-wear-tab"
          data-tab-target="#lounge-wear-tab-content"
          class="tab-link text-[18px] text-[#888] block p-2 text-center"
        >
          Lounge Wear
        </button>
      </div>
      <div class="embla_tabs__slide flex-shrink-0">
        <button
          id="kids-pret-tab"
          data-tab-target="#kids-pret-tab-content"
          class="tab-link text-[18px] text-[#888] block p-2 text-center"
        >
          Kids Pret
        </button>
      </div>
      <div class="embla_tabs__slide flex-shrink-0">
        <button
          id="limited-ed-tab"
          data-tab-target="#limited-ed-tab-content"
          class="tab-link text-[18px] text-[#888] block p-2 text-center"
        >
          Limited Edition
        </button>
      </div>
    </div>
  </div>

  <!-- Controls positioned absolutely to the left and right -->
  <button
    class="embla_tabs__button embla_tabs__button--prev absolute left-4 top-1/2 transform -translate-y-1/2 text-[#888]"
  >
    <svg class="w-[16px] h-[16px] lg:w-[20px] lg:h-[20px]">
      <use href="#embla_tabs__button__svg--prev"></use>
    </svg>
  </button>

  <button
    class="embla_tabs__button embla_tabs__button--next absolute right-4 top-1/2 transform -translate-y-1/2 text-[#888]"
  >
    <svg class="w-[16px] h-[16px] lg:w-[20px] lg:h-[20px]">
      <use href="#embla_tabs__button__svg--next"></use>
    </svg>
  </button>
</div>

<div class="tabsContent relative">
  <div
    class="tab-content active right-0"
    id="lounge-wear-tab-content"
    role="tabpanel"
    aria-labelledby="lounge-wear-tab"
  >
    <div class="embla_tabs_content relative mx-auto px-2">
      <div class="embla_tabs_content__viewport overflow-hidden">
        <div class="embla_tabs_content__container w-full flex">
          {% for i in (1..8) %}
            <div class="embla_tabs_content__slide px-1 md:px-4 flex flex-col grow-0 shrink-0 basis-1/2 lg:basis-1/4 overflow-hidden">
              <a href="#" class="w-full flex flex-col justify-center items-center">
                <!-- Image Container with Hover Effect -->
                <div class="relative w-full overflow-hidden group select-none aspect-[0.68]">
                  <img
                    src="//asimjofa.com/cdn/shop/files/268A4332.jpg"
                    alt="AJLW-07 SATIN SILK 2 PCS"
                    class="main-img w-full h-full object-cover object-center"
                  >

                  <!-- Hover Image with Scale and Opacity Transitions -->
                  <img
                    src="//asimjofa.com/cdn/shop/files/268A4374.jpg"
                    alt="AJLW-07 SATIN SILK 2 PCS"
                    class="hover-img absolute top-0 left-0 h-full w-full object-cover object-center"
                  >
                  <noscript>
                    <img
                      src="//asimjofa.com/cdn/shop/files/268A4332.jpg?v=1729765773&width=600"
                      alt="AJLW-07 SATIN SILK 2 PCS"
                      class="h-full w-full object-cover object-center"
                    >
                  </noscript>
                </div>
              </a>

              <!-- Product Details -->
              <div class="flex justify-between items-center p-2 bg-gray-100">
                <div class="flex flex-col text-[14px] w-3/5 ">
                  <span class="font-medium leading-6">AJLW-0{{ i }} Satin Silk 2 PCS</span>
                  <span class="text-gray-600">Rs. 3,890</span>
                </div>
                <div class="basis-1/2 flex justify-center items-center">
                  <a
                    href="#"
                    class="inline-flex justify-center items-center overflow-hidden relative atc-btn text-[12px] min-w-10 md:min-w-32 !h-[38px] bg-blue-500 text-white rounded-md hover:bg-blue-600 uppercase font-semibold"
                  >
                    <span class="btn-text h-full hidden md:flex justify-center items-center transition-all duration-200"
                      >Add to Cart</span
                    >
                    <span
                      class="btn-icon absolute flex justify-center items-center h-full transition-all duration-200 md:translate-y-[100%]"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="w-[16px] h-[16px] lg:w-[20px] lg:h-[20px]"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="1.5"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      >
                        <circle cx="9" cy="21" r="1"></circle>
                        <circle cx="20" cy="21" r="1"></circle>
                        <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                      </svg>
                    </span>
                  </a>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  <div
    class="tab-content"
    id="kids-pret-tab-content"
    role="tabpanel"
    aria-labelledby="kids-pret-tab"
  >
    Kids Pret Tab
  </div>
  <div
    class="tab-content"
    id="limited-ed-tab-content"
    role="tabpanel"
    aria-labelledby="limited-ed-tab"
  >
    Limited Edition Tab
  </div>
</div>

<style>
  /* Transition styles for tab content */
  .tab-content {
    visibility: hidden;
    opacity: 0;
    transform: translateY(40px);
    transition: 0.2s ease-in-out;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    z-index: 2;
  }

  .tab-content.active {
    visibility: visible;
    opacity: 1;
    transform: none;
    position: relative;
  }

  .tab-link.active {
    font-weight: 500;
    color: #111
  }

  .group .main-img {
    transform: scale(1);
    opacity: 1;
    transition: opacity 0.5s, transform 2s ease-in-out;
  }

  .group:hover .main-img {
    transform: scale(1.1);
    opacity: 0;
    transition: opacity 0.5s, transform 2s ease-in-out;
  }

  .group .hover-img {
    transform: scale(1);
    opacity: 0;
    transition: opacity 0.5s, transform 2s ease-in-out;
  }

  .group:hover .hover-img {
    transform: scale(1.1);
    opacity: 1;
    transition: opacity 0.5s, transform 2s ease-in-out;
  }

  .atc-btn:hover .btn-icon {
    transform: translateY(0);
  }

  .atc-btn:hover .btn-text {
    transform: translateY(-100%);
  }
</style>
<script>
  (function () {
    document.addEventListener('DOMContentLoaded', () => {
      // Tabs Content Slider
      const emblaNode = document.querySelector('.embla_tabs_content');
      const viewportNode = emblaNode.querySelector('.embla_tabs_content__viewport');

      const emblaApi = EmblaCarousel(
        viewportNode,
        {
          slidesToScroll: 'auto',
          loop: true,
          align: 'start',
        },
        [EmblaCarouselAutoplay({ playOnInit: true, delay: 3000, stopOnFocusIn: false })]
      );
    });
  })();

  (function () {
    document.addEventListener('DOMContentLoaded', () => {
      // Tabs Slider
      const emblaNode = document.querySelector('.embla_tabs');
      const viewportNode = emblaNode.querySelector('.embla_tabs__viewport');
      const prevBtnNode = emblaNode.querySelector('.embla_tabs__button--prev');
      const nextBtnNode = emblaNode.querySelector('.embla_tabs__button--next');

      const emblaApi = EmblaCarousel(viewportNode, { dragFree: true });
      EmblaUtils.addPrevNextBtnsClickHandlers(emblaApi, prevBtnNode, nextBtnNode);

      const tabLinks = document.querySelectorAll('.tab-link');
      const tabContents = document.querySelectorAll('.tab-content');

      let transitionTimeout;

      tabLinks.forEach((link) => {
        link.addEventListener('click', () => {
          tabLinks.forEach((otherLink) => otherLink.classList.remove('active'));
          // Add active class to the clicked link
          link.classList.add('active');
          const targetId = link.getAttribute('data-tab-target');
          const targetContent = document.querySelector(targetId);

          const currentContent = document.querySelector('.tab-content.active');
          if (currentContent && currentContent !== targetContent) {
            currentContent.classList.remove('active');
            currentContent.style.visibility = 'hidden';
          }

          targetContent.style.visibility = 'visible';
          targetContent.classList.remove('exiting');
          targetContent.classList.add('active');
        });
      });
    });
  })();
</script>
